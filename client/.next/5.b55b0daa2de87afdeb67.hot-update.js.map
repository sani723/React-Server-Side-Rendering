{"version":3,"file":"5.b55b0daa2de87afdeb67.hot-update.js","sources":["webpack:///components/Recipes/RecipeListItem.js","webpack:///components/Recipes/index.js"],"sourcesContent":["import css from \"./Recipes.css\";\n\nconst RecipeListItem = ({ item }) => {\n  return (\n    <div className=\"col-xs-12 col-sm-2\">\n      <div className={css.recipe}>\n        <img\n          className={css.imgResponsive}\n          src={item.recipe.image}\n          alt={item.recipe.label}\n        />\n        <div className={css.recipe__meta}>\n          <span>{item.recipe.label}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeListItem;\n\n\n\n// WEBPACK FOOTER //\n// components/Recipes/RecipeListItem.js","import Recipe from \"./RecipeListItem\";\nimport css from \"./Recipes.css\";\n\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst getRecipesQuery = gql`\n  {\n    getRecipes {\n      image\n      label\n    }\n  }\n`;\n\nclass Recipes extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          {/*this.props.recipes.hits.map((item, index) => (\n            <Recipe key={index} item={item} />\n          ))*/}\n\n          <Query query={getRecipesQuery}>\n            {({ loading, error, data }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error :( {error}</p>;\n\n              //console.log(data);\n              return data.getRecipes.map((item, index) =>\n                console.log(item.image)\n              );\n            }}\n          </Query>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recipes;\n\n\n\n// WEBPACK FOOTER //\n// components/Recipes/index.js"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AAEA;AACA;AAQA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;AAKA;;;;AAvBA;AACA;AAyBA;;;;A","sourceRoot":""}